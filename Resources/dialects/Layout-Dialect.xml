<?xml version="1.0" encoding="UTF-8"?>

<!--
   Copyright 2013, Emanuel Rabina (http://www.ultraq.net.nz/)

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<dialect xmlns="http://www.ultraq.net.nz/eclipse/thymeleaf-dialect"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.ultraq.net.nz/eclipse/thymeleaf-dialect ../schemas/Thymeleaf-Dialect.xsd"
	prefix="layout" namespace-uri="http://www.ultraq.net.nz/web/thymeleaf/layout">

	<attribute-processor name="decorator">
		<documentation
			see-also="fragment"
			reference="Thymeleaf Layout Dialect readme, section on Decorators and Fragments">
			<![CDATA[
			Specifies the name of the decorator template to apply to a content template.
			The mechanism for resolving decorator pages is the same as that used
			by Thymeleaf to resolve th:fragment and th:substituteby pages.
			]]>
		</documentation>
	</attribute-processor>

	<attribute-processor name="include">
		<documentation
			see-also="fragment"
			reference="Thymeleaf Layout Dialect readme, section on Includes and Fragments">
			<![CDATA[
			Similar to Thymeleaf's th:include, but allows the passing of entire
			element fragments to the included template.  Useful if you have some
			HTML that you want to reuse, but whose contents are too complex to determine
			or construct with context variables alone.
			]]>
		</documentation>
	</attribute-processor>

	<attribute-processor name="fragment">
		<documentation
			see-also="decorator include">
			<![CDATA[
			The glue that holds everything together; it marks sections in the decorator
			template that can be replaced by sections in the content template, which
			share the same name.
			]]>
		</documentation>
	</attribute-processor>

	<attribute-processor name="title-pattern">
		<documentation
			reference="Thymeleaf Layout Dialect readme, section on Title Pattern">
			<![CDATA[
			Allows for greater control of the resulting &lt;title&gt; element by
			specifying a pattern with some special tokens.  This can be used to
			extend the decorator's title with the content's one, instead of simply
			overriding it.
			]]>
		</documentation>
	</attribute-processor>

</dialect>
