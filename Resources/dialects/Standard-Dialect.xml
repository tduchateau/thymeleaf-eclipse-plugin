<?xml version="1.0" encoding="UTF-8"?>

<!--
   Copyright 2013, Emanuel Rabina (http://www.ultraq.net.nz/)

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<dialect xmlns="http://www.ultraq.net.nz/eclipse/thymeleaf-dialect"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.ultraq.net.nz/eclipse/thymeleaf-dialect Thymeleaf-Dialect.xsd"
	prefix="th" namespace-uri="http://www.thymeleaf.org">


	<!-- Introduced Thymeleaf attribute processors -->
	<!-- ========================================= -->

	<attribute-processor name="alt-title">
		<documentation><![CDATA[
			Sets both the <b>alt</b> and <b>title</b> attributes.
		]]></documentation>
	</attribute-processor>

	<attribute-processor name="attr">
		<documentation
			see-also="attrappend attrprepend"
			document-ref="Using Thymeleaf section 5 on Setting Attribute Values">
			<![CDATA[
			Sets the value of any attribute/s.  Takes a list of comma-separated
			attribute/expression pairs, eg:<br/>
			<br/>
			&lt;img src="../../images/gtvglogo.png" th:attr="src=@{/images/gtvglogo.png},title=#{logo},alt=#{logo}" /&gt;<br/>
			<br/>
			The above will set the src, title, and alt attributes to the results
			of each of their respective expressions.
			]]>
		</documentation>
	</attribute-processor>

	<attribute-processor name="attrappend">
		<documentation
			see-also="attr attrprepend classappend"
			document-ref="Using Thymeleaf section 5.4 on Appending And Prepending">
			<![CDATA[
			Appends the result of an expression to any attribute/s, eg:<br/>
			<br/>
			&lt;input type="button" value="Do it!" class="btn" th:attrappend="class=${' ' + cssStyle}" /&gt;<br/>
			<br/>
			If you process this template with the cssStyle variable set to "warning", you will get:<br/>
			<br/>
			&lt;input type="button" value="Do it!" class="btn warning" /&gt;
			]]>
		</documentation>
	</attribute-processor>

	<attribute-processor name="attrprepend">
		<documentation
			see-also="attr attrappend"
			document-ref="Using Thymeleaf section 5.4 on Appending And Prepending">
			<![CDATA[
			Prepends the result of an expression to any attribute/s, eg:<br/>
			<br/>
			&lt;input type="button" value="Do it!" class="btn" th:attrappend="class=${cssStyle + ' '}" /&gt;<br/>
			<br/>
			If you process this template with the cssStyle variable set to "warning", you will get:<br/>
			<br/>
			&lt;input type="button" value="Do it!" class="warning btn" /&gt;
			]]>
		</documentation>
	</attribute-processor>

	<attribute-processor name="case">
		<documentation
			see-also="switch"
			document-ref="Using Thymeleaf section 7.2 on Switch Statements">
			<![CDATA[
			Used together with the <b>th:switch</b> attribute processor, identifies
			an element to be rendered if its expression matches the result of the
			th:switch expression.
			]]>
		</documentation>
	</attribute-processor>

	<attribute-processor name="classappend">
		<documentation
			see-also="attrappend class"
			document-ref="Using Thymeleaf section 5.4 on Appending And Prepending">
			<![CDATA[
			Appends the result of an expression to the <b>class</b> attribute, eg:<br/>
			<br/>
			&lt;div class="item" th:classappend="${myObject.type == 'special'} ? 'special' : 'normal'" /&gt;<br/>
			<br/>
			Depending on the result of the expression, the class attribute will
			become either "item special" or "item normal".
			]]>
		</documentation>
	</attribute-processor>

	<attribute-processor name="each">
		<documentation
			document-ref="Using Thymeleaf section 6.2 on Keeping Iteration Status">
			<![CDATA[
			Iterates through a collection of objects, repeating each of the child
			elements for every object in that collection, eg:<br/>
			<br/>
			&lt;tr th:each="prod : ${prods}"&gt;<br/>
			&nbsp; &lt;td th:text="${prod.name}"&gt;Product name&lt;/td&gt;<br/>
			&nbsp; &lt;td th:text="${prod.price}"&gt;Product price&lt;/td&gt;<br/>
			&lt;/tr&gt;<br/>
			<br/>
			That "prod : ${prods}" attribute value you see above means "for each
			element in the result of evaluating ${prods}, repeat this fragment of
			template setting that element into a variable called prod".<br/>
			<br/>
			A collection can be any java.util.Iterable, a java.util.Map (iteration
			variables will be a java.util.Map.Entry), or an array.
			]]>
		</documentation>
	</attribute-processor>

	<attribute-processor name="fragment">
		<documentation
			see-also="include substituteby"
			document-ref="Using Thymeleaf section 8.1 on Including Template Fragments">
			<![CDATA[
			Gives a name to sections of your template that are available for inclusion
			by the <b>th:include</b> and <b>th:substituteby</b> processors.
			]]>
		</documentation>
	</attribute-processor>

	<attribute-processor name="object">
		<documentation
			see-also="with"
			document-ref="Using Thymeleaf section 4.3 on the asterisk syntax">
			<![CDATA[
			Selects an object so that its methods and properties can be accessed
			using the shortcut *{...} syntax, eg:<br/>
			<br/>
			&lt;div th:object="${session.user}"&gt;<br/>
			&nbsp; &lt;span th:text="*{firstName}"&gt;First name&lt;/span&gt;<br/>
			&nbsp; &lt;span th:text="*{lastName}"&gt;Last name&lt;/span&gt;<br/>
			&lt;/div&gt;
			]]>
		</documentation>
	</attribute-processor>

	<attribute-processor name="if">
		<documentation see-also="unless"
			document-ref="Using Thymeleaf section 7.1 on Simple Conditionals">
			<![CDATA[
			Evaluates an expression that, if true, will cause this element and it's
			children to be rendered.  If the expression is false, then this element
			and it's children will be removed.
			]]>
		</documentation>
	</attribute-processor>

	<attribute-processor name="inline">
		<documentation
			document-ref="Using Thymeleaf section 11 on Inlining">
			<![CDATA[
			Lets you use expressions directly in your template.<br/>
			<br/>
			If this attribute's value is <b>text</b>, then you can use the [[...]]
			syntax to put expressions within your text without having to use the
			th:text attribute processor, eg:<br/>
			&lt;p th:inline="text"&gt;Hello [[${session.user.name}]]!&lt;p&gt;<br/>
			<br/>
			If this attribute's value is <b>javascript</b> or <b>dart</b>, and used
			in a &lt;script&gt; tag, then you can insert expressions directly into
			your JavaScript/Dart code with the /*[[...]]*/, /*[+...+]*/, and /*[-...-]*/
			syntaxes.
			]]>
		</documentation>
		<restrictions values="text javascript dart"/>
	</attribute-processor>

	<attribute-processor name="unless">
		<documentation see-also="if"
			document-ref="Using Thymeleaf section 7.1 on Simple Conditionals">
			<![CDATA[
			The opposite of <b>th:if</b>, evaluates an expression that, if false,
			will cause this element and it's children to be rendered.
			]]>
		</documentation>
	</attribute-processor>

	<attribute-processor name="include">
		<documentation
			see-also="substituteby fragment"
			document-ref="Using Thymeleaf section 8.1 on Including Template Fragments"><![CDATA[
			Specifies another template and the fragment within that other template
			to include at this point, eg:<br/>
			<br/>
			&lt;div th:include="templateName :: fragmentName"&gt;&lt;div&gt;<br/>
			<br/>
			The above will find the template named templateName, and add the fragment
			named fragmentName as a child of this element.
			]]>
		</documentation>
	</attribute-processor>

	<attribute-processor name="lang-xmllang">
		<documentation><![CDATA[
			Sets both the <b>lang</b> and <b>xml:lang</b> attributes.
		]]></documentation>
	</attribute-processor>

	<attribute-processor name="remove">
		<documentation
			document-ref="Using Thymeleaf section 8.2 on Removing Template Fragments">
			<![CDATA[
			Removes a piece of this template from the final result.<br/>
			<br/>
			If this attribute's value is <b>all</b>, both the containing tag and
			it's children will be removed.  If the value is <b>body</b>, only the
			tag's children will be removed.  If the value is <b>tag</b>, the containing
			tag will be removed, but not it's children.  If the value is <b>all-but-first</b>,
			then all but the first child of the containing tag will be removed.
			]]>
		</documentation>
		<restrictions values="all body tag all-but-first"/>
	</attribute-processor>

	<attribute-processor name="substituteby">
		<documentation
			see-also="include fragment"
			document-ref="Using Thymeleaf section 8.1 on Including Template Fragments">
			<![CDATA[
			Similar to <b>th:include</b>, but instead of adding the specified template
			fragment as a child of this element, it will replace this element with
			the template fragment.
			]]>
		</documentation>
	</attribute-processor>

	<attribute-processor name="switch">
		<documentation
			see-also="case if"
			document-ref="Using Thymeleaf section section 7.2 on Switch Statements">
			<![CDATA[
			Selects a child element for rendering if the child's <b>th:case</b>
			expression is an exact match of this processor's expression, eg:<br/>
			<br/>
			&lt;div th:switch="${user.role}"&gt;<br/>
			&nbsp; &lt;p th:case="'admin'"&gt;User is an administrator&lt;/p&gt;<br/>
			&nbsp; &lt;p th:case="#{roles.manager}"&gt;User is a manager&lt;/p&gt;<br/>
			&lt;/div&gt;<br/>
			<br/>
			Note that as soon as one th:case attribute is evaluated as true, every
			other th:case attribute in the same switch context is evaluated as false.
			<br/>
			The default option is specified as th:case="*"
			]]>
		</documentation>
	</attribute-processor>

	<attribute-processor name="text">
		<documentation
			see-also="utext"
			document-ref="Using Thymeleaf section 3 on Using Texts">
			<![CDATA[
			Replaces the text content of this tag with the result of an expression.
			Performs escaping of any special characters so that the text is valid
			HTML/XML text.
			]]>
		</documentation>
	</attribute-processor>

	<attribute-processor name="utext">
		<documentation
			see-also="text"
			document-ref="Using Thymeleaf section 3.2 on Unescaped Text">
			<![CDATA[
			Does the same as <b>th:text</b> except that it doesn't perform any escaping
			of special characters.  Useful if the replacement text has HTML/XML
			characters that you want added to the rendered page.
			]]>
		</documentation>
	</attribute-processor>

	<attribute-processor name="with">
		<documentation
			see-also="object"
			document-ref="Using Thymeleaf section 9 on Local Variables">
			<![CDATA[
			Create one or more local variables scoped to this tag, that can then
			be referred to by other expressions.  Takes a comma-separated list of
			localname/expression pairs, eg:<br/>
			<br/>
			&lt;div th:with="firstPer=${persons[0]},secondPer=${persons[1]}"&gt;<br/>
			&nbsp; &lt;p th:text="${firstPer.name}"&gt;First person name&lt;p&gt;<br/>
			&nbsp; &lt;p th:text="${secondPer.name}"&gt;Second person name&lt;p&gt;<br/>
			&lt;/div&gt;
			]]>
		</documentation>
	</attribute-processor>

	<attribute-processor name="xmlbase">
		<documentation see-also="xmllang xmlspace"><![CDATA[
			Sets the <b>xml:base</b> attribute to the result of the expression.
		]]></documentation>
	</attribute-processor>

	<attribute-processor name="xmllang">
		<documentation see-also="xmlbase xmlspace"><![CDATA[
			Sets the <b>xml:lang</b> attribute to the result of the expression.
		]]></documentation>
	</attribute-processor>

	<attribute-processor name="xmlspace">
		<documentation see-also="xmlbase xmllang"><![CDATA[
			Sets the <b>xml:space</b> attribute to the result of the expression.
		]]></documentation>
	</attribute-processor>

	<!-- Text inling processor??? -->


	<!-- Fixed value processors -->
	<!-- ====================== -->

	<attribute-processor name="async"/>
	<attribute-processor name="autofocus"/>
	<attribute-processor name="autoplay"/>
	<attribute-processor name="checked"/>
	<attribute-processor name="controls"/>
	<attribute-processor name="declare"/>
	<attribute-processor name="default"/>
	<attribute-processor name="defer"/>
	<attribute-processor name="disabled"/>
	<attribute-processor name="formnovalidate"/>
	<attribute-processor name="hidden"/>
	<attribute-processor name="ismap"/>
	<attribute-processor name="loop"/>
	<attribute-processor name="multiple"/>
	<attribute-processor name="novalidate"/>
	<attribute-processor name="nowrap"/>
	<attribute-processor name="open"/>
	<attribute-processor name="pubdate"/>
	<attribute-processor name="readonly"/>
	<attribute-processor name="required"/>
	<attribute-processor name="reversed"/>
	<attribute-processor name="selected"/>
	<attribute-processor name="scoped"/>
	<attribute-processor name="seamless"/>


	<!-- Event processors -->
	<!-- ================ -->

	<attribute-processor name="onabort"/>
	<attribute-processor name="onafterprint"/>
	<attribute-processor name="onbeforeprint"/>
	<attribute-processor name="onbeforeunload"/>
	<attribute-processor name="onblur"/>
	<attribute-processor name="oncanplay"/>
	<attribute-processor name="oncanplaythrough"/>
	<attribute-processor name="onchange"/>
	<attribute-processor name="onclick"/>
	<attribute-processor name="oncontextmenu"/>
	<attribute-processor name="ondblclick"/>
	<attribute-processor name="ondrag"/>
	<attribute-processor name="ondragend"/>
	<attribute-processor name="ondragenter"/>
	<attribute-processor name="ondragleave"/>
	<attribute-processor name="ondragover"/>
	<attribute-processor name="ondragstart"/>
	<attribute-processor name="ondrop"/>
	<attribute-processor name="ondurationchanged"/>
	<attribute-processor name="onemptied"/>
	<attribute-processor name="onended"/>
	<attribute-processor name="onerror"/>
	<attribute-processor name="onfocus"/>
	<attribute-processor name="onformchange"/>
	<attribute-processor name="onforminput"/>
	<attribute-processor name="onhashchange"/>
	<attribute-processor name="oninput"/>
	<attribute-processor name="oninvalid"/>
	<attribute-processor name="onkeydown"/>
	<attribute-processor name="onkeypress"/>
	<attribute-processor name="onkeyup"/>
	<attribute-processor name="onload"/>
	<attribute-processor name="onloadeddata"/>
	<attribute-processor name="onloadedmetadata"/>
	<attribute-processor name="onloadstart"/>
	<attribute-processor name="onmessage"/>
	<attribute-processor name="onmousedown"/>
	<attribute-processor name="onmousemove"/>
	<attribute-processor name="onmouseout"/>
	<attribute-processor name="onmouseover"/>
	<attribute-processor name="onmouseup"/>
	<attribute-processor name="onmousewheel"/>
	<attribute-processor name="onoffline"/>
	<attribute-processor name="ononline"/>
	<attribute-processor name="onpause"/>
	<attribute-processor name="onplay"/>
	<attribute-processor name="onplaying"/>
	<attribute-processor name="onpopstate"/>
	<attribute-processor name="onprogress"/>
	<attribute-processor name="onratechange"/>
	<attribute-processor name="onreadystatechange"/>
	<attribute-processor name="onredo"/>
	<attribute-processor name="onreset"/>
	<attribute-processor name="onresize"/>
	<attribute-processor name="onscroll"/>
	<attribute-processor name="onseeked"/>
	<attribute-processor name="onseeking"/>
	<attribute-processor name="onselect"/>
	<attribute-processor name="onshow"/>
	<attribute-processor name="onstalled"/>
	<attribute-processor name="onstorage"/>
	<attribute-processor name="onsubmit"/>
	<attribute-processor name="onsuspend"/>
	<attribute-processor name="ontimeupdate"/>
	<attribute-processor name="onundo"/>
	<attribute-processor name="onunload"/>
	<attribute-processor name="onvolumechange"/>
	<attribute-processor name="onwaiting"/>


	<!-- Non-removable attribute processors -->
	<!-- ================================== -->

	<attribute-processor name="action"/>
	<attribute-processor name="href"/>
	<attribute-processor name="name"/>
	<attribute-processor name="src"/>
	<attribute-processor name="type"/>
	<attribute-processor name="value"/>


	<!-- Removable attribute processors -->
	<!-- ============================== -->

	<attribute-processor name="abbr"/>
	<attribute-processor name="accept"/>
	<attribute-processor name="accept-charset"/>
	<attribute-processor name="accesskey"/>
	<attribute-processor name="align"/>

	<attribute-processor name="alt">
		<documentation see-also="alt-title"><![CDATA[
			Sets the <b>alt</b> attribute to the result of the expression.
		]]></documentation>
	</attribute-processor>

	<attribute-processor name="archive"/>
	<attribute-processor name="audio"/>
	<attribute-processor name="autocomplete"/>
	<attribute-processor name="axis"/>
	<attribute-processor name="background"/>
	<attribute-processor name="bgcolor"/>
	<attribute-processor name="border"/>
	<attribute-processor name="cellpadding"/>
	<attribute-processor name="cellspacing"/>
	<attribute-processor name="challenge"/>
	<attribute-processor name="charset"/>
	<attribute-processor name="cite"/>
	<attribute-processor name="class"/>
	<attribute-processor name="classid"/>
	<attribute-processor name="codebase"/>
	<attribute-processor name="codetype"/>
	<attribute-processor name="cols"/>
	<attribute-processor name="colspan"/>
	<attribute-processor name="compact"/>
	<attribute-processor name="content"/>
	<attribute-processor name="contenteditable"/>
	<attribute-processor name="contextmenu"/>
	<attribute-processor name="data"/>
	<attribute-processor name="datetime"/>
	<attribute-processor name="dir"/>
	<attribute-processor name="draggable"/>
	<attribute-processor name="dropzone"/>
	<attribute-processor name="enctype"/>
	<attribute-processor name="for"/>
	<attribute-processor name="form"/>
	<attribute-processor name="formaction"/>
	<attribute-processor name="formenctype"/>
	<attribute-processor name="formmethod"/>
	<attribute-processor name="formtarget"/>
	<attribute-processor name="frame"/>
	<attribute-processor name="frameborder"/>
	<attribute-processor name="headers"/>
	<attribute-processor name="height"/>
	<attribute-processor name="high"/>
	<attribute-processor name="hreflang"/>
	<attribute-processor name="hspace"/>
	<attribute-processor name="http-equiv"/>
	<attribute-processor name="icon"/>
	<attribute-processor name="id"/>
	<attribute-processor name="keytype"/>
	<attribute-processor name="kind"/>
	<attribute-processor name="label"/>
	<attribute-processor name="lang"/>
	<attribute-processor name="list"/>
	<attribute-processor name="longdesc"/>
	<attribute-processor name="low"/>
	<attribute-processor name="manifest"/>
	<attribute-processor name="marginheight"/>
	<attribute-processor name="marginwidth"/>
	<attribute-processor name="max"/>
	<attribute-processor name="maxlength"/>
	<attribute-processor name="media"/>
	<attribute-processor name="method"/>
	<attribute-processor name="min"/>
	<attribute-processor name="optimum"/>
	<attribute-processor name="pattern"/>
	<attribute-processor name="placeholder"/>
	<attribute-processor name="poster"/>
	<attribute-processor name="preload"/>
	<attribute-processor name="radiogroup"/>
	<attribute-processor name="rel"/>
	<attribute-processor name="rev"/>
	<attribute-processor name="rows"/>
	<attribute-processor name="rowspan"/>
	<attribute-processor name="rules"/>
	<attribute-processor name="sandbox"/>
	<attribute-processor name="scheme"/>
	<attribute-processor name="scope"/>
	<attribute-processor name="scrolling"/>
	<attribute-processor name="size"/>
	<attribute-processor name="sizes"/>
	<attribute-processor name="span"/>
	<attribute-processor name="spellcheck"/>
	<attribute-processor name="standby"/>
	<attribute-processor name="style"/>
	<attribute-processor name="srclang"/>
	<attribute-processor name="start"/>
	<attribute-processor name="step"/>
	<attribute-processor name="summary"/>
	<attribute-processor name="tabindex"/>
	<attribute-processor name="target"/>

	<attribute-processor name="title">
		<documentation see-also="alt-title"><![CDATA[
			Sets the <b>title</b> attribute to the result of the expression.
		]]></documentation>
	</attribute-processor>

	<attribute-processor name="usemap"/>
	<attribute-processor name="valuetype"/>
	<attribute-processor name="vspace"/>
	<attribute-processor name="width"/>
	<attribute-processor name="wrap"/>

</dialect>
